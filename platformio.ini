; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32-s3-devkitc-12

[program]
name = SliderPwm
version = 3.0
instance = 2
hostname = ${program.name}-${program.instance}

[influx]
server = job4
port = 8086
database = ${program.name}

[ntp]
server = fritz.box

[syslog]
server = job4
port = 514

[mqtt]
server = job4
port = 1883
topic = ${program.name}

[env]
framework = arduino
monitor_speed = 115200
; board_build.f_cpu = 80000000L
board_build.partitions = min_spiffs.csv
lib_deps = 
    Syslog
    arduino-libraries/NTPClient
    PubSubClient
    Preferences
    ; ESP32
    ; https://github.com/me-no-dev/ESPAsyncTCP.git
    ; https://github.com/me-no-dev/ESPAsyncWebServer.git
    ; ESPAsyncTCP
    ; ESPAsyncWebServer
    ; ESP32 me-no-dev/AsyncTCP
    ; ESP32 C3
    ; https://github.com/NotCherry/ESPAsyncWebServer_ESP32C3.git
    ; ESP32 S3
    https://github.com/mathieucarbou/AsyncTCPSock
    https://github.com/mathieucarbou/ESPAsyncWebServer
    https://github.com/tzapu/WiFiManager.git
    ; ESP32, ESP32C3 
    ; https://github.com/joba-1/WiFiManager.git#async-webserver
    ; ESP8266 WiFiManager
lib_ignore =
    AsyncTCP
    mathieucarbou/AsyncTCP
build_flags = 
    -Wall -Wno-deprecated
    -fpermissive
    -DPIO_FRAMEWORK_ARDUINO_ENABLE_EXCEPTIONS
    -DVERSION='"${program.version}"'
    -DPROGNAME='"${program.name}"'
    -DHOSTNAME='"${program.hostname}"'
    -DBAUDRATE=${env.monitor_speed}
    -DINFLUX_SERVER='"${influx.server}"'
    -DINFLUX_PORT=${influx.port}
    -DINFLUX_DB='"${influx.database}"'
    -DSYSLOG_SERVER='"${syslog.server}"'
    -DSYSLOG_PORT=${syslog.port}
    -DMQTT_SERVER='"${mqtt.server}"'
    -DMQTT_TOPIC='"${mqtt.topic}/${program.instance}"'
    -DMQTT_PORT=${mqtt.port}
    -DMQTT_MAX_PACKET_SIZE=512
    -DNTP_SERVER='"${ntp.server}"'
    -DUSE_SPIFFS


[env:esp32-s3-devkitc-1]
board = esp32-s3-devkitc-1
; includes my hack to find S3 by its serial number
platform = https://github.com/joba-1/platform-espressif32.git#develop
monitor_filters = esp32_exception_decoder
;build_type = debug
;debug_load_mode = manual
;debug_tool = esp-builtin
;upload_protocol = esp-builtin
upload_speed = 2000000
build_flags = 
    ;-DARDUINO_USB_CDC_ON_BOOT=1
    ${env.build_flags}
;debug_speed = 40000 F4:12:FA:E9:93:60
upload_port = /dev/ttyACM_s3_1_com
monitor_port = /dev/ttyACM_s3_1_com

[env:esp32-s3-devkitc-12]
board = esp32-s3-devkitc-1
; includes my hack to find S3 by its serial number
platform = https://github.com/joba-1/platform-espressif32.git#develop
monitor_filters = esp32_exception_decoder
;build_type = debug
;debug_load_mode = manual
;debug_tool = esp-builtin
;upload_protocol = esp-builtin
upload_speed = 2000000
build_flags = 
    ;-DARDUINO_USB_CDC_ON_BOOT=1
    ${env.build_flags}
;debug_speed = 40000 F4:12:FA:CA:A4:B8
upload_port = /dev/ttyACM_s3_2_com
monitor_port = /dev/ttyACM_s3_2_com

[env:esp32-c3-xiao_ser]
platform = espressif32
; platform_packages = platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git
board = seeed_xiao_esp32c3
monitor_port = /dev/ttyACM1
monitor_filters = esp32_exception_decoder
upload_port = /dev/ttyACM1

[env:esp32-c3-xiao_ota]
platform = espressif32
board = seeed_xiao_esp32c3
monitor_port = /dev/ttyACM1
monitor_filters = esp32_exception_decoder
extra_scripts = upload_script.py
upload_protocol = custom
upload_port = ${program.hostname}/update

[env:esp32-c3-mini_ser]
platform = espressif32
platform_packages = platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git
board = esp32-c3-mini
monitor_port = /dev/ttyACM1
monitor_filters = esp32_exception_decoder
upload_port = /dev/ttyACM1

[env:esp32-c3-mini_ota]
platform = espressif32
board = esp32-c3-mini
monitor_port = /dev/ttyACM1
monitor_filters = esp32_exception_decoder
extra_scripts = upload_script.py
upload_protocol = custom
upload_port = ${program.hostname}/update

[env:mhetesp32minikit_ser]
platform = espressif32
; platform_packages = platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git
board = mhetesp32minikit
monitor_port = /dev/ttyUSB2
monitor_filters = esp32_exception_decoder
upload_port = /dev/ttyUSB2

[env:mhetesp32minikit_ota]
platform = espressif32
board = mhetesp32minikit
monitor_port = /dev/ttyUSB2
monitor_filters = esp32_exception_decoder
extra_scripts = upload_script.py
upload_protocol = custom
upload_port = ${program.hostname}/update

[env:esp32cam_ser]
platform = espressif32
board = esp32cam
monitor_port = /dev/ttyUSB2
monitor_filters = esp32_exception_decoder
upload_port = /dev/ttyUSB2

[env:esp32cam_ota]
platform = espressif32
board = esp32cam
monitor_port = /dev/ttyUSB2
monitor_filters = esp32_exception_decoder
extra_scripts = upload_script.py
upload_protocol = custom
upload_port = ${program.hostname}/update

[env:d1_mini_ser]
platform = espressif8266
board = d1_mini
board_build.ldscript = eagle.flash.1m192.ld
board_build.filesystem = spiffs
monitor_port = /dev/ttyUSB2
monitor_filters = esp8266_exception_decoder
upload_speed = 460800
upload_port = /dev/ttyUSB2

[env:d1_mini_ota]
platform = espressif8266
board = d1_mini
board_build.ldscript = eagle.flash.1m192.ld
board_build.filesystem = spiffs
monitor_port = /dev/ttyUSB2
monitor_filters = esp8266_exception_decoder
extra_scripts = upload_script.py
upload_protocol = custom
upload_port = ${program.hostname}/update
