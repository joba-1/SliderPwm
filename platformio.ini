; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = mhetesp32minikit_ser

[program]
name = SliderPwm
version = 1.6
instance = 3
hostname = ${program.name}-${program.instance}

[influx]
server = job4
port = 8086
database = ${program.name}

[ntp]
server = fritz.box

[syslog]
server = job4
port = 514

[mqtt]
server = job4
port = 1883
topic = ${program.name}

[env]
framework = arduino
monitor_speed = 115200
board_build.f_cpu = 80000000L
board_build.partitions = min_spiffs.csv
lib_deps = 
    Syslog
    arduino-libraries/NTPClient
    PubSubClient
    me-no-dev/AsyncTCP
    ; https://github.com/me-no-dev/ESPAsyncWebServer.git
    ESPAsyncWebServerESP32C3
    https://github.com/joba-1/WiFiManager.git#async-webserver
build_flags = 
    -Wall 
    -DPIO_FRAMEWORK_ARDUINO_ENABLE_EXCEPTIONS
    -DVERSION='"${program.version}"'
    -DPROGNAME='"${program.name}"'
    -DHOSTNAME='"${program.hostname}"'
    -DBAUDRATE=${env.monitor_speed}
    -DINFLUX_SERVER='"${influx.server}"'
    -DINFLUX_PORT=${influx.port}
    -DINFLUX_DB='"${influx.database}"'
    -DSYSLOG_SERVER='"${syslog.server}"'
    -DSYSLOG_PORT=${syslog.port}
    -DMQTT_SERVER='"${mqtt.server}"'
    -DMQTT_TOPIC='"${mqtt.topic}/${program.instance}"'
    -DMQTT_PORT=${mqtt.port}
    -DMQTT_MAX_PACKET_SIZE=512
    -DNTP_SERVER='"${ntp.server}"'
    -DUSE_SPIFFS

[env:esp32-c3-mini_ser]
platform = espressif32
platform_packages = platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git
board = esp32-c3-mini
monitor_port = /dev/ttyACM0
monitor_filters = esp32_exception_decoder
upload_port = /dev/ttyACM0

[env:esp32-c3-mini_ota]
platform = espressif32
board = esp32-c3-mini
monitor_port = /dev/ttyACM0
monitor_filters = esp32_exception_decoder
extra_scripts = upload_script.py
upload_protocol = custom
upload_port = ${program.hostname}/update

[env:mhetesp32minikit_ser]
platform = espressif32
; platform_packages = platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git
board = mhetesp32minikit
monitor_port = /dev/ttyACM1
monitor_filters = esp32_exception_decoder
upload_port = /dev/ttyACM1

[env:mhetesp32minikit_ota]
platform = espressif32
board = mhetesp32minikit
monitor_port = /dev/ttyACM1
monitor_filters = esp32_exception_decoder
extra_scripts = upload_script.py
upload_protocol = custom
upload_port = ${program.hostname}/update

[env:esp32cam_ser]
platform = espressif32
board = esp32cam
monitor_port = /dev/ttyUSB2
monitor_filters = esp32_exception_decoder
upload_port = /dev/ttyUSB2

[env:esp32cam_ota]
platform = espressif32
board = esp32cam
monitor_port = /dev/ttyUSB2
monitor_filters = esp32_exception_decoder
extra_scripts = upload_script.py
upload_protocol = custom
upload_port = ${program.hostname}/update

[env:d1_mini_ser]
platform = espressif8266
board = d1_mini
monitor_port = /dev/ttyUSB2
monitor_filters = esp8266_exception_decoder
upload_speed = 460800
upload_port = /dev/ttyUSB2

[env:d1_mini_ota]
platform = espressif8266
board = d1_mini
monitor_port = /dev/ttyUSB2
monitor_filters = esp8266_exception_decoder
extra_scripts = upload_script.py
upload_protocol = custom
upload_port = ${program.hostname}/update
